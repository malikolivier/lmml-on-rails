= form_for(exam, builder: VueFormBuilder, html: { id: 'external_outline_examination' }, url: '') do |f|
  = f.hidden_field :id
  .row
    = f.label :sex, class: 'col-sm-4'
    .col-sm-8
      = f.select :sex, translated_sexes
  .row
    .col-xs-4
      = f.check_box :partial_body
    .col-xs-4
      = f.number_field :height
    .col-xs-4
      = f.number_field :weight
  = f.select :constitution,
             ExternalOutlineExamination.translated_enum(:constitution)

  = render 'nested_array_form', form: f, method: :livores_mortis,
           fields: { color: { type: :select, encapsulating_element: {class: 'col-xs-3'} },
                     position: { type: :select, encapsulating_element: {class: 'col-xs-3'} },
                     intensity: { type: :select, encapsulating_element: {class: 'col-xs-2'} },
                     on_finger_pressure: {type: :select, encapsulating_element: {class: 'col-xs-3'} } } do
    = f.text_field :livor_mortis_note, label_name: t('activerecord.attributes.examination.note')
  = render 'nested_array_form', form: f, method: :rigores_mortis,
           fields: { joint: { type: :select, encapsulating_element: {class: 'col-xs-4'} },
                     intensity: { type: :select, encapsulating_element: {class: 'col-xs-3'} },
                     category: {type: :select, encapsulating_element: {class: 'col-xs-4'} } } do
    = f.text_field :rigor_mortis_note, label_name: t('activerecord.attributes.examination.note')
  .row
    .col-xs-4
      = f.check_box :cold
    .col-xs-4
      = f.number_field :rectal_temperature
    .col-xs-4
      = f.number_field :room_temperature
  = yield f
