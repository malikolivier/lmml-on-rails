- # Arguments: form, method, fields, &block
- #   form: The parent form
- #   method: Method to access the object's array
- #   fields: {
- #     field_name: { // field_name can be whatever method of the objects in the array
- #       type: input type (supported: 'select') // compulsory
- #       encapsulating_element: {  // optional
- #         class: 'col-xs-3' // Whatever class for the encapsulating element
- #       }
- #     }
- #   }
- object = form.object
- object_name = object.class.to_s.underscore
- association_info = object.class.reflect_on_association(method)
- association_name = association_info.class_name.underscore
.panel.panel-default
  .panel-heading= t("activerecord.models.#{association_name}")
  .panel-body.form-horizontal
    = hidden_field object_name, "#{association_info.plural_name}_attributes[]"
    = form.fields_for association_info.plural_name do |ff|
      - # The following input allows to at least initialize an empty array
      = ff.hidden_field :id
      - fields.each do |field_name, field_type|
        - # These hidden fields will initialize the Vue values
        = ff.hidden_field field_name
    .form-group{'v-for': "#{association_name} in #{association_info.plural_name}_attributes"}
      - fields.each do |field_name, field_info|
        %div{class: field_info.try(:[], :encapsulating_element).try(:[], :class)}
          - case field_info[:type]
            - when :select
              = label association_name, field_name, t("activerecord.attributes.#{association_name}.#{field_name}")
              = select association_name, field_name, send("translated_#{association_name}_#{field_name.to_s.pluralize}"), {prompt: true}, {class: 'form-control', 'v-model': "#{association_name}.#{field_name}"}
            - default
              - raise "Unhandled field_type: #{field_type}"
      .col-xs-1
        %label &nbsp;
        %button.btn.btn-danger.btn-xs{'v-on:click.prevent': "delete_#{association_name}(#{association_name})"} X
    %button.btn.btn-default{'v-on:click.prevent': "add_#{association_name}()"}= t('helpers.add')
    = yield
