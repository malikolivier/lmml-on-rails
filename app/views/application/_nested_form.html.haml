- dual = !!local_assigns[:dual]
- array_name = form_to_vue(object_name, association_info.plural_name)
- v_for = "(#{association_name}, index) in #{array_name}"
.form-group{'v-for': v_for, class: dual ? 'col-xs-6' : nil}
  - fields.each do |field_name, field_info|
    %div{class: field_info.try(:[], :encapsulating_element).try(:[], :class)}
      = label association_name, field_name, t("activerecord.attributes.#{associated_class_name}.#{field_name}")
      - html_options = vue_nested_model_html_attrs(association_name, field_name, field_info)
      - case field_info[:type]
        - when :select
          = select association_name, field_name,
                   association_info.klass.translated_enum!(field_name), {},
                   html_options
        - when :collection_select
          = collection_select association_name, field_name,
                              field_info[:collection],
                              field_info[:value_method],
                              field_info[:text_method],
                              { prompt: true },
                              html_options
        - when :check_box, :number_field, :text_field
          = send(field_info[:type], association_name, field_name, html_options)
        - else
          - raise "Unhandled field_type: #{field_info[:type]}"
  = yield
  - if !dual
    %hr.clear-both{ 'v-if': "#{array_name}.length - 1 !== index" }
