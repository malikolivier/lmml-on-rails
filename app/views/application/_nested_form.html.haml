- dual = !!local_assigns[:dual]
- match = object_name.match(/^\w*\[(\w*)\]*$/)
- if match
  - v_for = "#{association_name} in #{match[1]}.#{association_info.plural_name}_attributes"
- else
  - v_for = "#{association_name} in #{association_info.plural_name}_attributes"
.form-group{'v-for': v_for, class: dual ? 'col-xs-6' : nil}
  - fields.each do |field_name, field_info|
    %div{class: field_info.try(:[], :encapsulating_element).try(:[], :class)}
      = label association_name, field_name, t("activerecord.attributes.#{association_name}.#{field_name}")
      - case field_info[:type]
        - when :select
          = select association_name, field_name, send("translated_#{association_name}_#{field_name.to_s.pluralize}"), {prompt: true}, {class: 'form-control', 'v-model': "#{association_name}.#{field_name}"}
        - when :check_box, :number_field, :text_field
          = send(field_info[:type], association_name, field_name, class: 'form-control', 'v-model': "#{association_name}.#{field_name}")
        - else
          - raise "Unhandled field_type: #{field_info[:type]}"
  = yield
